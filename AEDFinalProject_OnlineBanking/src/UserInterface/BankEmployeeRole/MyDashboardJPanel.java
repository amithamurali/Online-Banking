/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BankEmployeeRole;

import Business.Beneficiary.Beneficiary;
import Business.Enterprise.Enterprise;
import Business.Organization.PersonalBankingOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BeneficiaryWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amitha.murali
 */
public class MyDashboardJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private PersonalBankingOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    
    /**
     * Creates new form MyDashboard
     */
    public MyDashboardJPanel(JPanel userProcessContainer,Enterprise enterprise, PersonalBankingOrganization organization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;     
        this.organization = organization;
        this.userAccount = userAccount;
        populateBeneficiaryTable();
        populateMyBeneficiaryTable();
      
    }

    public void populateBeneficiaryTable(){
        DefaultTableModel model = (DefaultTableModel) jTableBeneficiaryList.getModel();
        
        model.setRowCount(0);
        for(WorkRequest request :  organization.getWorkQueue().getWorkRequestList()){
            
            BeneficiaryWorkRequest bWorkRequest = (BeneficiaryWorkRequest) request;
            if(bWorkRequest != null)
            {
                if(bWorkRequest.getBeneficiary().getStatus().equals(Beneficiary.UNDERREVIEW_STATUS))
                {
            Object[] row = new Object[6];
            row[0] = bWorkRequest.getSender();
            row[1] = bWorkRequest.getBeneficiary();
            row[2] = bWorkRequest.getBeneficiary().getBankAccount().getAccountNumber();
            row[3] = bWorkRequest.getBeneficiary().getBankAccount().getRoutingNumber();
            row[4] = bWorkRequest;
            row[5] = bWorkRequest.getBeneficiary().getAddedDate();
            
            model.addRow(row);
                }
            }
        }
    }
     
      public void populateMyBeneficiaryTable(){
        DefaultTableModel model = (DefaultTableModel)jTableMyBeneficiaryList.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request :  organization.getWorkQueue().getWorkRequestList()){
            
            BeneficiaryWorkRequest bWorkRequest = (BeneficiaryWorkRequest) request;
            if(bWorkRequest != null)
            {
                
                if(bWorkRequest.getBeneficiary().getStatus().equals(Beneficiary.PENDING_STATUS)
                        || bWorkRequest.getBeneficiary().getStatus().equals(Beneficiary.BENEFICIARY_APPROVED)
                        || bWorkRequest.getBeneficiary().getStatus().equals(Beneficiary.BENEFICIARY_DECLINED))
                {
            Object[] row = new Object[6];
            row[0] = bWorkRequest.getSender();
            row[1] = bWorkRequest.getBeneficiary();
            row[2] = bWorkRequest.getBeneficiary().getBankAccount().getAccountNumber();
            row[3] = bWorkRequest.getBeneficiary().getBankAccount().getRoutingNumber();
            row[4] = bWorkRequest;
            row[5] = bWorkRequest.getBeneficiary().getAddedDate();
            
            model.addRow(row);
                }
            }
        }
    }
////    /**
////     * This method is called from within the constructor to initialize the form.
////     * WARNING: Do NOT modify this code. The content of this method is always
////     * regenerated by the Form Editor.
////     */
////    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAssignToMe = new javax.swing.JButton();
        EmployeeListJScrollPane = new javax.swing.JScrollPane();
        jTableMyBeneficiaryList = new javax.swing.JTable();
        EmployeeListJScrollPane1 = new javax.swing.JScrollPane();
        jTableBeneficiaryList = new javax.swing.JTable();
        lblHeading = new javax.swing.JLabel();
        lblHeading1 = new javax.swing.JLabel();
        btnApproved = new javax.swing.JButton();
        btnDecline = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMainHeading = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        btnAssignToMe.setText("Assign to Myself");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        jTableMyBeneficiaryList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Beneficiary Name", "Account Number", "Routing Number", "Status", "Added Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EmployeeListJScrollPane.setViewportView(jTableMyBeneficiaryList);

        jTableBeneficiaryList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Beneficiary Name", "Account Number", "Routing Number", "Status", "Added Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        EmployeeListJScrollPane1.setViewportView(jTableBeneficiaryList);

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblHeading.setText("My Work Items");

        lblHeading1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lblHeading1.setText("Beneficiary List");

        btnApproved.setText("Approve");
        btnApproved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApprovedActionPerformed(evt);
            }
        });

        btnDecline.setText("Decline");
        btnDecline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeclineActionPerformed(evt);
            }
        });

        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblMainHeading.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lblMainHeading.setText("My Dashboard");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMainHeading)
                                    .addComponent(lblHeading)
                                    .addComponent(lblHeading1)
                                    .addComponent(btnBack))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 709, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnApproved)
                                .addGap(29, 29, 29)
                                .addComponent(btnDecline))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(81, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAssignToMe)
                            .addComponent(EmployeeListJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmployeeListJScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMainHeading)
                .addGap(29, 29, 29)
                .addComponent(lblHeading1)
                .addGap(29, 29, 29)
                .addComponent(EmployeeListJScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnAssignToMe)
                        .addGap(16, 16, 16)
                        .addComponent(lblHeading)
                        .addGap(29, 29, 29)
                        .addComponent(EmployeeListJScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnApproved)
                            .addComponent(btnDecline))
                        .addContainerGap(97, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:
        try{
        int selectedRow = jTableBeneficiaryList.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            BeneficiaryWorkRequest request = (BeneficiaryWorkRequest)jTableBeneficiaryList.getValueAt(selectedRow, 4);
            request.setReceiver(userAccount);
            request.getBeneficiary().setStatus(Beneficiary.PENDING_STATUS);
            request.setStatus(Beneficiary.PENDING_STATUS);
            populateBeneficiaryTable();
            populateMyBeneficiaryTable();
            JOptionPane.showMessageDialog(this, "The selected item has been assigned to you", "Info", JOptionPane.INFORMATION_MESSAGE);
        }
        }
         catch(Exception ex)
{
    JOptionPane.showMessageDialog(this, "Error occured.. Please try later", "Warning", JOptionPane.WARNING_MESSAGE);
    
}

    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnApprovedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApprovedActionPerformed
        // TODO add your handling code here:
        try{
          int selectedRow = jTableMyBeneficiaryList.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            BeneficiaryWorkRequest request = (BeneficiaryWorkRequest)jTableMyBeneficiaryList.getValueAt(selectedRow, 4);
            if(request.getBeneficiary().getStatus().equals(Beneficiary.PENDING_STATUS))
            {
            request.getBeneficiary().setStatus(Beneficiary.BENEFICIARY_APPROVED);
            request.setStatus(Beneficiary.BENEFICIARY_APPROVED);
            populateBeneficiaryTable();
            populateMyBeneficiaryTable();
           JOptionPane.showMessageDialog(this, "The selected item has been approved", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Sorry you cannot take action on this item", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        }}
         catch(Exception ex)
{
    JOptionPane.showMessageDialog(this, "Error occured.. Please try later", "Warning", JOptionPane.WARNING_MESSAGE);
    
}
    }//GEN-LAST:event_btnApprovedActionPerformed

    private void btnDeclineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeclineActionPerformed
        // TODO add your handling code here:
       try{
        int selectedRow = jTableMyBeneficiaryList.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            BeneficiaryWorkRequest request = (BeneficiaryWorkRequest)jTableMyBeneficiaryList.getValueAt(selectedRow, 4);
            if(request.getBeneficiary().getStatus().equals(Beneficiary.PENDING_STATUS))
            {
            request.getBeneficiary().setStatus(Beneficiary.BENEFICIARY_DECLINED);
            request.setStatus(Beneficiary.BENEFICIARY_DECLINED);
            populateBeneficiaryTable();
            populateMyBeneficiaryTable();
             JOptionPane.showMessageDialog(this, "The selected item has been declined", "Info", JOptionPane.INFORMATION_MESSAGE);
              }
            else
            {
                JOptionPane.showMessageDialog(this, "Sorry you cannot take action on this item", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        }
       }
        catch(Exception ex)
{
    JOptionPane.showMessageDialog(this, "Error occured.. Please try later", "Warning", JOptionPane.WARNING_MESSAGE);
    
}
    }//GEN-LAST:event_btnDeclineActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane EmployeeListJScrollPane;
    private javax.swing.JScrollPane EmployeeListJScrollPane1;
    private javax.swing.JButton btnApproved;
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDecline;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable jTableBeneficiaryList;
    private javax.swing.JTable jTableMyBeneficiaryList;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblHeading1;
    private javax.swing.JLabel lblMainHeading;
    // End of variables declaration//GEN-END:variables
}
