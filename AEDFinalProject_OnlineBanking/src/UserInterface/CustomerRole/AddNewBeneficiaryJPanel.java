package UserInterface.CustomerRole;


import Business.BankAccount.BankAccount;
import Business.Beneficiary.Beneficiary;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Organization.PersonalBankingOrganization;
import Business.Person.Customer;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BeneficiaryWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author  amitha.murali
 */
public class AddNewBeneficiaryJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Customer customer;
    private UserAccount userAccount;
    
    public AddNewBeneficiaryJPanel(JPanel upc, Enterprise enterprise, Customer customer,UserAccount userAccount) {
        initComponents();
        userProcessContainer = upc;
        this.enterprise = enterprise;
        this.customer = customer;
        this.userAccount = userAccount;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeading = new javax.swing.JLabel();
        btnBeneficiary = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtBeneficiaryName = new javax.swing.JTextField();
        lblAccountNumber = new javax.swing.JLabel();
        txtAccountNumber = new javax.swing.JTextField();
        lblRoutingNumber = new javax.swing.JLabel();
        txtRoutingNumber = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeading.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblHeading.setText("New Beneficiary");
        add(lblHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));

        btnBeneficiary.setText("Add Beneficiary");
        btnBeneficiary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBeneficiaryActionPerformed(evt);
            }
        });
        add(btnBeneficiary, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, -1, -1));

        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, -1, -1));

        lblName.setText("Beneficiary Name");
        add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));
        add(txtBeneficiaryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 90, 150, -1));

        lblAccountNumber.setText("Account Number");
        add(lblAccountNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));
        add(txtAccountNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 150, -1));

        lblRoutingNumber.setText("Routing Number");
        add(lblRoutingNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));
        add(txtRoutingNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 150, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBeneficiaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBeneficiaryActionPerformed
try{
    
             
    if(!txtAccountNumber.getText().isEmpty() && !txtRoutingNumber.getText().isEmpty() && !txtBeneficiaryName.getText().isEmpty())    
    {
        String beneficiaryName = txtBeneficiaryName.getText(); 
        int accountNumber = Integer.parseInt(txtAccountNumber.getText());
        int routingNumber = Integer.parseInt(txtRoutingNumber.getText());
        Beneficiary beneficary = customer.getBeneficiaryDirectory().createBeneficiary();       
        if(null != beneficary)
        {
        beneficary.setBeneficiaryName(beneficiaryName);
        beneficary.setStatus(Beneficiary.UNDERREVIEW_STATUS);
        
        Date dNow = new Date();
        SimpleDateFormat ft = new SimpleDateFormat("yyyy.MM.dd");
        String todayDate = ft.format(dNow);
        beneficary.setAddedDate(todayDate);
        
                 
         for (Person person : enterprise.getPersonDirectory().getPersonList()){
            if(person.getPersonType().toString().equals(Person.Type.Customer.getValue()))
            {
                Customer selectedCustomer = (Customer)person;
                if(selectedCustomer != null)
                {
                BankAccount bankAccount = selectedCustomer.getBankAccountDirectory().searchBankAccount(accountNumber,routingNumber); 
                if(bankAccount != null)
                {
                beneficary.setBankAccount(bankAccount);
                 
                 BeneficiaryWorkRequest request = new BeneficiaryWorkRequest(beneficary);               
                 request.setSender(userAccount);
                 request.setStatus(Beneficiary.UNDERREVIEW_STATUS);
                Organization org = null;
                for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                    if (organization instanceof PersonalBankingOrganization){
                        org = organization;
                        break;
                    }
                }
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(request);
                    JOptionPane.showMessageDialog(null, "Beneficiary added successfully!!", "Info", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
        
                }
                else
                {
                     JOptionPane.showMessageDialog(null, "Invalid account or routing number", "Info", JOptionPane.INFORMATION_MESSAGE);
                }
                }
            }
         }
        
       
        
       
        }
    }
    else
    {
        JOptionPane.showMessageDialog(null, "Beneficiary name, Account Number, Routing Number, IFSC code are mandatory fields", "Info", JOptionPane.INFORMATION_MESSAGE); 
    }
            
    }
         catch(Exception ex)
{
    JOptionPane.showMessageDialog(this, "Error occured.. Please try later", "Warning", JOptionPane.WARNING_MESSAGE);
    
}
    }//GEN-LAST:event_btnBeneficiaryActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        backAction();
    }//GEN-LAST:event_btnBackActionPerformed

    private void backAction(){
        userProcessContainer.remove(this);
        Component [] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        CustomerWorkAreaJPanel customerWorkArea = (CustomerWorkAreaJPanel) component;
        customerWorkArea.populateBeneficiaryTable();
        customerWorkArea.populateApprovedBeneficiaryTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBeneficiary;
    private javax.swing.JLabel lblAccountNumber;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRoutingNumber;
    private javax.swing.JTextField txtAccountNumber;
    private javax.swing.JTextField txtBeneficiaryName;
    private javax.swing.JTextField txtRoutingNumber;
    // End of variables declaration//GEN-END:variables

}
